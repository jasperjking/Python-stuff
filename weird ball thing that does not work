from re import X
import pygame
import random
from cmath import pi
import math
pygame.init()

WIDTH, HEIGHT = 400, 400
WIN = pygame.display.set_mode((WIDTH, HEIGHT))

FPS = 60

WHITE = (255, 255, 255)
BLUE = (50, 100, 200)
BACK_COLOUR = (100, 200, 100)
VEL = 4

RADIUS = 10

class box:
    def __init__(self, x, y):
        self.x = x
        self.y = y

    def draw(x, y):
        pygame.draw.rect(WIN, WHITE, pygame.Rect(x, y, 20, 20))


class ball:
    def __init__(self):
        self.x = 0
        self.y = 0
        self.x_vel = 0
        self.y_vel = 0

    def create_asteroid(self):
        self.x = random.randint(50, WIDTH - 50)
        self.y = random.randint(50, HEIGHT - 50)
        angle = random.uniform(math.radians(0), math.radians(360))
        self.x_vel = math.cos(angle) * VEL * random.randrange(-1, 0, 2)
        self.y_vel = math.sin(angle) * VEL * random.randrange(-1, 1, 2)



    def move_asteroid(self):

        if self.x <= 0 + 20 or self.x >= WIDTH - 20:
            self.x_vel *= -1
        if self.y <= 0 + 20 or self.y >= HEIGHT - 20:
            self.y_vel *= -1

        self.x = self.x + self.x_vel
        self.y = self.y + self.y_vel
        
        pygame.draw.circle(WIN, BLUE, (self.x, self.y), 20)




def draw_window(boxes):
    WIN.fill(BACK_COLOUR)

    b.move_asteroid()

    for c in boxes:
        box.draw(c[0], c[1])


    pygame.display.update()


clock = pygame.time.Clock()

b = ball()

b.create_asteroid()

def main():

    run = True

    boxes = []

    while run:

        clock.tick(FPS)

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                run = False
                pygame.quit()

            if event.type == pygame.MOUSEBUTTONDOWN:
                mousepress = pygame.mouse.get_pressed()
                mousepos = pygame.mouse.get_pos()
                if mousepress[0]:
                    if mousepos[0] >= b.x - 20 and mousepos[0] <= b.x + 20 and mousepos[1] >= b.y - 20 and mousepos[1] <= b.y + 20:
                        b.create_asteroid()
                elif mousepress[2]:
                    boxes.append(mousepos)





        draw_window(boxes)

            
        


if __name__ == "__main__":
    main()